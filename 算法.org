** 模拟算法
   使用计算机模拟生成日常生活中的相关数据。
   在程序设计语言中，可使用随机函数来模拟自然界中发生的不可预测情况。C语言中使用srand()和rand()函数生成随机数。其中srand用来初始化随机数发生器，然后使用rand()函数生成随机数，要使用这两个函数，需要在源程序中包含time.h头文件。
** 算法的评价
   四原则：
   正确性，高效性，空间性，可读性。高效性是主要标准。
   通常认为，一个算法的“工作量”可以靠代码中的关键部分来确定，这些关键部分称为基本操作，通过统计算法中基本操作重复执行的次数就可近似地得到算法的执行效率，用O(n)表示，称为时间复杂度。
注：在分析一个算法的时间复杂度时，一般可考虑平均情况和最坏情况。对于时间复杂度的平均值，往往需要较复杂的统计计算。因此大部分情况下都以最坏时间复杂度为准来考查算法的时间复杂度。
* 简单数据结构
  算法用来处理对应的数据，被处理的数据都必须按一定的规则进行组织。当数据之间存在一种或多种特定关系时，称这些关系为结构。通常，数据之间具有三种基本结构：
  + 线性结构，数据元素之间为一对一关系
  + 树形结构，数据元素之间为一对多关系
  + 网状结构，数据元素之间为多对多关系
** 最基本的数据结构：线性表
   线性表是一个线性结构，它是一个含有n个结点（数据元素）的有限序列，不同线性表的数据元素可以不同，但同一线性表，各数据元素必须具有相同的数据类型，数据元素长度相同。
   特征：
   + 有且只有一个首元素
   + 有且只有一个尾元素
   + 除尾元素外，其余元素均有唯一的后继元素
   + 除首元素外，其余元素均有唯一的前驱元素
   在计算机中保存线性表时，根据存储方式的不同，分为顺序存储结构和链式存储结构。顺序存储结构的称为顺序表，链式存储结构的称为链表。
*** 顺序表
    用一组地址连续的存储单元依次保存线性表中的数据元素。
